ext.slf4jVersion = '1.7.+'
ext.guavaVersion = '27.1-jre'
ext.springfoxVersion = '2.9.+'
ext.alpegaCoreVersion = '1.4.+'
ext.alpegaSpringMvcConfigVersion = '1.0.+'
ext.companyDirectoryVersion = '1.3.+'
ext.mapStructVersion = '1.3.0.Final'
ext.commonsLangVersion = '3.4'
ext.cmMbsEnvelopeVersion = '1.14'
ext.jaxb2RuntimeVersion = '0.9.2'
ext.cmAlpegaSchemaVersion = '3.15'
ext.quartzJobsVersion = '2.3.1'
ext.jacksonVersion = '2.9.+'
ext.awsSdkS3Version = '1.11.682'

ext.alpegaCore = [
        "com.alpegagroup:lib-core-commons:${alpegaCoreVersion}",
        "com.alpegagroup:lib-core-integration:${alpegaCoreVersion}"
]

ext.alpegaSpringMvcConfig = "com.alpegagroup:lib-spring-mvc-config:${alpegaSpringMvcConfigVersion}"

ext.companyDirectoryAwsLambda = [
        "com.alpegagroup:lib-company-directory-provider-aws-lambda:${companyDirectoryVersion}",
        "com.alpegagroup:lib-company-directory-provider:${companyDirectoryVersion}",
        "com.alpegagroup:lib-company-directory-model:${companyDirectoryVersion}",
        "com.alpegagroup:lib-company-directory-util-test:${companyDirectoryVersion}"
]

ext.cmMbsEnvelope = "com.alpega.schema.cm.mbs:cm-mbs-envelope:${cmMbsEnvelopeVersion}"

ext.jaxb2Runtime = [
        "org.codehaus.mojo:jaxb2-maven-plugin:2.5.0",
        "org.jvnet.jaxb2_commons:jaxb2-basics-runtime:${jaxb2RuntimeVersion}"
]

ext.cmAlpegaSchema = [
        "com.alpega.schema.cm.insurance:cm-insurance:${cmAlpegaSchemaVersion}",
        "com.alpega.schema.cm.insurance:cm-creditrating:${cmAlpegaSchemaVersion}",
        "com.alpega.schema.cm.insurance:cm-bankguarantee:${cmAlpegaSchemaVersion}",
        "com.alpega.schema.cm.company:cm-companyuseraddress:${cmAlpegaSchemaVersion}",
        "com.alpega.schema.cm:cm-currency:${cmAlpegaSchemaVersion}"
]

ext.alpegaCofaceVersion = '4.4.+'
ext.alpegaCofaceLib = [
        "com.alpegagroup:lib-coface-client:${alpegaCofaceVersion}",
        "com.alpegagroup:lib-coface-provider:${alpegaCofaceVersion}",
        "com.alpegagroup:lib-coface-model:${alpegaCofaceVersion}"
]
ext.alpegaCofaceLibModel = "com.alpegagroup:lib-coface-model:${alpegaCofaceVersion}"

ext.alpegaDmsVersion = '1.0.+'
ext.alpegaDmsLib = [
        "com.alpegagroup:lib-dms-client:${alpegaDmsVersion}",
        "com.alpegagroup:lib-dms-provider:${alpegaDmsVersion}",
        "com.alpegagroup:lib-dms-model:${alpegaDmsVersion}"
]
ext.alpegaDmsLibModel = "com.alpegagroup:lib-dms-model:${alpegaDmsVersion}"

ext.alpegaMailVersion = '1.2.+'
ext.alpegaMailSenderLib = [
        "com.alpegagroup:lib-mail-sender:${alpegaMailVersion}",
        "com.alpegagroup:lib-mail-model:${alpegaMailVersion}"
]
ext.alpegaMailLib =
        ext.alpegaMailSenderLib +
        ["com.alpegagroup:lib-mail-template-provider:${alpegaMailVersion}",
        "com.alpegagroup:lib-mail-service-provider:${alpegaMailVersion}"]

ext.javaxInject = 'javax.inject:javax.inject:1'

ext.log = [
        "org.slf4j:slf4j-api:${slf4jVersion}",
        'ch.qos.logback:logback-classic:1.2.+',
        'org.codehaus.janino:janino:3.0.+'
]

ext.springfoxSwagger = [
        "io.springfox:springfox-swagger2:${springfoxVersion}",
        "io.springfox:springfox-swagger-ui:${springfoxVersion}"
]

ext.mapStruct = "org.mapstruct:mapstruct:${mapStructVersion}"
ext.mapStructProcessor = "org.mapstruct:mapstruct-processor:${mapStructVersion}"

ext.commonsLang = "org.apache.commons:commons-lang3:${commonsLangVersion}"

ext.quartzJobs = "org.quartz-scheduler:quartz-jobs:${quartzJobsVersion}"

ext.jackson = [
        "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
        "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
]

ext.awsSdkS3 = "com.amazonaws:aws-java-sdk-s3:${awsSdkS3Version}"

repositories {
    maven {
        name 'Nexus WTN Artifactory'
        def repositoryGroupName = isSnapshot ? 'public-development' : 'public'
        url "${artifactsRepository}/repository/" + repositoryGroupName + "/"
    }
    mavenLocal()
    jcenter()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {

    // common libraries

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation "com.google.guava:guava:${guavaVersion}"

    testImplementation(
            'org.codehaus.groovy:groovy-all:2.5.7',
            'org.spockframework:spock-core:1.3-groovy-2.5',
            'com.athaydes:spock-reports:1.6.2',
            'cglib:cglib-nodep:+',
            "com.google.guava:guava-testlib:${guavaVersion}"
    )
}

compileJava {
    if (project.hasProperty("xlint")) {
        options.compilerArgs << '-Xlint'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
}
